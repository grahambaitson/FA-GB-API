// Deployment
buildscript {
	repositories {
		mavenCentral()
	}
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
    }
}
apply plugin: 'spring-boot'
bootRepackage.enabled = false


jar {
    baseName = 'FA-GB-API'
    version =  '0.1.0'
    
    manifest {
        attributes(
            "Main-Class": "fa.gb.Application"
        )
    }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
	compile("io.springfox:springfox-swagger2:2.4.0")
	compile("io.springfox:springfox-swagger-ui:2.4.0")
	compile("org.springframework:spring-jdbc")
	compile("postgresql:postgresql:9.1-901-1.jdbc4")
	compile("org.springframework:spring-context-support:4.3.2.RELEASE")
    compile "org.apache.commons:commons-lang3:3.4"
    compile "commons-validator:commons-validator:1.5.1"
    compile "org.apache.logging.log4j:log4j-api:2.5"
    compile "org.apache.logging.log4j:log4j-core:2.5"
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

/*
// Local development
buildscript {
	repositories {
	    mavenCentral()
	}
	
	dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

bootRepackage.enabled = false

jar.doFirst {
    manifest {
        attributes (
            "Class-Path": configurations.compile.collect { it.getName() }.join(" ")
        )
    }
}

jar {
    baseName = 'FA-GB-API'
    version =  '0.1.0'
    
    manifest {
        attributes(
            "Main-Class": "fa.gb.Application"
        )
    }
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
	compile("io.springfox:springfox-swagger2:2.4.0")
	compile("io.springfox:springfox-swagger-ui:2.4.0")
	compile("org.springframework:spring-jdbc")
	compile("postgresql:postgresql:9.1-901-1.jdbc4")
	compile("org.springframework:spring-context-support:4.3.2.RELEASE")
    compile "org.apache.commons:commons-lang3:3.4"
    compile "commons-validator:commons-validator:1.5.1"
    compile "org.apache.logging.log4j:log4j-api:2.5"
    compile "org.apache.logging.log4j:log4j-core:2.5"
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

task copyToLib(type: Copy) {
    into "${buildDir}/libs"
    from configurations.runtime
}

build.dependsOn(copyToLib)

clean.dependsOn(cleanEclipse)
clean.dependsOn(eclipseProject)
clean.dependsOn(eclipseClasspath)
clean.dependsOn(eclipseJdt)
*/